name: scripts

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  test-analyze:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: ["3.10", "3.11"]
    steps:
      - if: matrix.os == 'macos-latest'
        name: Install MacOS prerequisites
        run: brew install cairo pango gdk-pixbuf libffi
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ matrix.python }}-${{ hashFiles('pyproject.toml') }}
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e .[viz,html] --upgrade

      - name: Run analysis script
        run: |
          wget https://github.com/mindee/doctr/releases/download/v0.1.0/sample.pdf
          python scripts/analyze.py sample.pdf --noblock --detection db_mobilenet_v3_large

  test-detect-text:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: ["3.10", "3.11"]
    steps:
      - if: matrix.os == 'macos-latest'
        name: Install MacOS prerequisites
        run: brew install cairo pango gdk-pixbuf libffi
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ matrix.python }}-${{ hashFiles('pyproject.toml') }}
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e .[viz,html] --upgrade

      - name: Run detection script
        run: |
          wget https://github.com/mindee/doctr/releases/download/v0.1.0/sample.pdf
          python scripts/detect_text.py sample.pdf --detection db_mobilenet_v3_large

  test-evaluate:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: ["3.10", "3.11"]
    steps:
      - if: matrix.os == 'macos-latest'
        name: Install MacOS prerequisites
        run: brew install cairo pango gdk-pixbuf libffi
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ matrix.python }}-${{ hashFiles('pyproject.toml') }}
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e .[viz,html] --upgrade
      - name: Run evaluation script
        run: |
          python scripts/evaluate.py db_resnet50 crnn_vgg16_bn --samples 10
          python scripts/evaluate_kie.py db_resnet50 crnn_vgg16_bn --samples 10

  test-collectenv:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # MacOS issue ref.: https://github.com/actions/setup-python/issues/855 & https://github.com/actions/setup-python/issues/865
          python-version: ${{ matrix.os == 'macos-latest' && matrix.python == '3.10' && '3.11' || matrix.python }}
          architecture: x64
      - name: Run environment collection script
        run: python scripts/collect_env.py
