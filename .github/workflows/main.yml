name: tests

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  pytest-common:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: ["3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ matrix.python }}-${{ hashFiles('pyproject.toml') }}-tests
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[viz,html] --upgrade
          pip install -e .[testing]
      - name: Run unittests
        run: |
          coverage run -m pytest tests/common/ -rs
          coverage xml -o coverage-common.xml
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-common
          path: ./coverage-common.xml
          if-no-files-found: error


  pytest-torch:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: ["3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ matrix.python }}-${{ hashFiles('pyproject.toml') }}-tests
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[viz,html] --upgrade
          pip install -e .[testing]

      - name: Run unittests
        run: |
          coverage run -m pytest tests/pytorch/ -rs
          coverage xml -o coverage-pt.xml

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-pytorch
          path: ./coverage-pt.xml
          if-no-files-found: error

  codecov-upload:
    runs-on: ubuntu-latest
    needs: [ pytest-common, pytest-torch ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          flags: unittests
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
