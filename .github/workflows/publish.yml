name: publish

on:
  release:
    types: [published]

jobs:
  pypi:
    if: "!github.event.release.prerelease"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: ["3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ matrix.python }}-${{ hashFiles('pyproject.toml') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine --upgrade
      - name: Get release tag
        id: release_tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          VERSION: ${{ env.VERSION }}
        run: |
          BUILD_VERSION=$VERSION python setup.py sdist bdist_wheel
          twine check dist/*
          twine upload dist/*

  pypi-check:
    needs: pypi
    if: "!github.event.release.prerelease"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: ["3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install python-doctr[torch]
          python -c "from importlib.metadata import version; print(version('python-doctr'))"

  conda:
    if: "!github.event.release.prerelease"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.10"
          channels: pypdfium2-team,bblanchon,defaults,conda-forge
          channel-priority: strict
      - name: Install dependencies
        shell: bash -el {0}
        run: conda install -y conda-build conda-verify anaconda-client
      - name: Get release tag
        id: release_tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: Build and publish
        shell: bash -el {0}
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
          VERSION: ${{ env.VERSION }}
        run: |
          echo "BUILD_VERSION=${VERSION}" >> $GITHUB_ENV
          python setup.py sdist
          mkdir conda-dist
          conda build .conda/ --output-folder conda-dist
          conda-verify conda-dist/linux-64/*conda --ignore=C1115
          anaconda upload conda-dist/linux-64/*conda

  conda-check:
    if: "!github.event.release.prerelease"
    runs-on: ubuntu-latest
    needs: conda
    steps:
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.10"
      - name: Install package
        shell: bash -el {0}
        run: |
          conda config --set channel_priority strict
          conda install pytorch torchvision torchaudio cpuonly -c pytorch
          conda install -c techMindee -c pypdfium2-team -c bblanchon -c defaults -c conda-forge python-doctr
          python -c "from importlib.metadata import version; print(version('python-doctr'))"
